{"version":3,"sources":["Components/Header.js","Components/Nav.js","Components/SearchBar.js","Components/Gallery.js","Components/NoResults.js","Components/SearchResults.js","App.js","config.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","Nav","className","react_router_dom","to","SearchBar","state","searchText","onSearchChange","e","_this","setState","target","value","handleSubmit","preventDefault","searchPhoto","query","searchQuery","path","concat","history","push","currentTarget","reset","_this2","this","onSubmit","type","onChange","name","ref","input","placeholder","required","id","fill","height","viewBox","width","xmlns","d","Component","withRouter","Gallery","src","url","alt","title","NoResults","SearchResults","pics","results","data","map","pic","Components_Gallery","farm","server","secret","key","Components_NoResults","api","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","defaultSearch","arguments","length","undefined","axios","get","then","response","guitarPics","photos","photo","loading","catch","error","console","log","kieselSearch","kieselPics","fenderSearch","fenderPics","gibsonSearch","gibsonPics","Components_Header","Components_SearchBar","Components_Nav","react_router","exact","render","Components_SearchResults","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fffd4486.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = props => {\n    return (\n        <header>\n            <h1>React Gallery App</h1>\n        </header>\n    )\n}\n\nexport default Header;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst Nav = () => {\n    \n    return (\n        // Copied from example-index.html\n        <nav className=\"main-nav\">\n            <ul>\n                <li><NavLink to='/kieselguitars'>Kiesel Guitars </NavLink></li>\n                <li><NavLink to='/fenderguitars'>Fender Guitars</NavLink></li>\n                <li><NavLink to='/gibsonguitars'>Gibson Guitars</NavLink></li>\n            </ul>\n        </nav>\n    )\n}\n\nexport default Nav;","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nclass SearchBar extends Component {\n  \n  state = {\n    searchText: ''\n  }\n  // thanks to https://tylermcginnis.com/react-router-programmatically-navigate/ for reference on the search funtionality\n  \n  onSearchChange = e => {\n    this.setState({ searchText: e.target.value });\n  }\n  \n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.searchPhoto(this.query.value, 'search');\n    let searchQuery = this.query.value;\n    let path = `/search?q=${searchQuery}`;\n    this.props.history.push(path);\n    e.currentTarget.reset();\n  }\n  \n  render() {  \n    return (\n      <form className=\"search-form\" onSubmit={this.handleSubmit}>\n        <input type=\"search\" \n               onChange={this.onSearchChange}\n               name=\"search\" \n               ref={(input) => this.query = input}\n               placeholder=\"Search...\" required/>\n        <button type=\"submit\" id=\"submit\" className=\"search-button\"><i className=\"material-icons icn-search\"></i>\n          <svg fill=\"#fff\" height=\"24\" viewBox=\"0 0 23 23\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"/>\n            <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n          </svg>\n        </button>\n      </form>      \n    );\n  }\n}\n\nexport default withRouter(SearchBar);","import React from 'react';\n\nconst Gallery = props => {\n    return (\n      <li>\n        <img src={props.url} alt={props.title} />\n      </li>\n    )\n  };\n\n\nexport default Gallery;","import React from 'react';\n\nconst NoResults = () => {\n    return (\n        <div className=\"not-found\">\n            <h3>No Results Found</h3>\n            <p>Your search did not return any results. Please try again.</p>\n        </div>\n    )\n}\n\n\nexport default NoResults;","import React from 'react';\nimport Gallery from './Gallery';\nimport NoResults from './NoResults';\n\nconst SearchResults = (props) => {\n    const results = props.data;\n    let pics;\n        if (results) {\n            pics = results.map(pic => \n                <Gallery \n                    url={`https://farm${pic.farm}.staticflickr.com/${pic.server}/${pic.id}_${pic.secret}.jpg`}\n                    key={pic.id} \n                    title={pic.title}\n                    /> );\n        } else {\n            pics = <NoResults />\n            }\n\n\n    return(\n        <div className=\"photo-container\">\n            <h2>Search Results</h2>\n                <ul>\n                    {pics}\n                </ul>\n        </div>\n        );\n    }\n\nexport default SearchResults;","import './App.css';\nimport React, { Component } from 'react';\nimport apiKey from './config';\nimport axios from 'axios';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\n//Components\nimport Header from './Components/Header';\nimport Nav from './Components/Nav';\nimport SearchBar from './Components/SearchBar';\nimport SearchResults from './Components/SearchResults';\n\nconst api = apiKey;\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      pics: [],\n      loading: true\n    };\n  } \n\n  componentDidMount() {\n    this.defaultSearch();\n    this.kieselSearch();\n    this.fenderSearch();\n    this.gibsonSearch();\n  }\n\n  defaultSearch = ( query = 'guitars') => {\n    axios.get(`https://api.flickr.com/services/rest/?method=flickr.photos.search&api_key=${api}&tags=${query}&sort=relevance&per_page=24&format=json&nojsoncallback=1`)\n      .then(response => \n        {\n        this.setState({\n          guitarPics: response.data.photos.photo,\n          loading: false\n        });\n      })\n      .catch(function (error) {\n        console.log('Error fetching and parsing data', error);\n      })\n  }\n\n  kieselSearch = (query = 'kieselguitars' ) => {\n    axios.get(`https://api.flickr.com/services/rest/?method=flickr.photos.search&api_key=${api}&tags=${query}&sort=relevance&per_page=24&format=json&nojsoncallback=1`)\n      .then(response => \n        {\n        this.setState({\n          kieselPics: response.data.photos.photo,\n          loading: false\n        });\n      })\n      .catch(function (error) {\n        console.log('Error fetching and parsing data', error);\n      })\n  }\n\n  fenderSearch = (query = 'fenderguitars' ) => {\n    axios.get(`https://api.flickr.com/services/rest/?method=flickr.photos.search&api_key=${api}&tags=${query}&sort=relevance&per_page=24&format=json&nojsoncallback=1`)\n      .then(response => \n        {\n        this.setState({\n          fenderPics: response.data.photos.photo,\n          loading: false\n        });\n      })\n      .catch(function (error) {\n        console.log('Error fetching and parsing data', error);\n      })\n  }\n\n  gibsonSearch = (query = 'gibsonguitars' ) => {\n    axios.get(`https://api.flickr.com/services/rest/?method=flickr.photos.search&api_key=${api}&tags=${query}&sort=relevance&per_page=24&format=json&nojsoncallback=1`)\n      .then(response => \n        {\n        this.setState({\n          gibsonPics: response.data.photos.photo,\n          loading: false\n        });\n      })\n      .catch(function (error) {\n        console.log('Error fetching and parsing data', error);\n      })\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"container\">\n          <Header />\n          <SearchBar searchPhoto={this.defaultSearch}/>\n          <Nav />\n          <Switch>\n            <Route exact path = '/' \n              render = { \n                () => (this.state.loading) \n                  ? <p> Loading...</p> \n                  : <SearchResults data={this.state.guitarPics} />} />\n            <Route exact path = '/kieselguitars'\n              render = {\n                () => (this.state.loading) \n                  ? <p> Loading...</p> \n                  : <SearchResults data={this.state.kieselPics} />} /> \n              <Route exact path = '/fenderguitars'\n                render = {\n                  () => (this.state.loading) \n                    ? <p> Loading...</p> \n                    : <SearchResults data={this.state.fenderPics} />} />\n              <Route exact path = '/gibsonguitars'\n                render = {\n                  () => (this.state.loading) \n                    ? <p> Loading...</p> \n                    : <SearchResults data={this.state.gibsonPics} />} />\n              <Route path = '/search'\n                render = {\n                  () => (this.state.loading) \n                    ? <p> Loading...</p> \n                    : <SearchResults data={this.state.guitarPics} />} />\n            </Switch>\n        </div> \n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","\nconst apiKey = '8157d0a037cf0e3b5d722ace1c816185';\n\nexport default apiKey;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}